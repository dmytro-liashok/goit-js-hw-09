{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SA4BA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,IApCMQ,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAoBC,GAClBA,EAAMC,iBAMN,IAJA,IAAMC,EAAkBC,OAAON,SAASC,cAAc,oBAAoBM,OACpEC,EAAYF,OAAON,SAASC,cAAc,mBAAmBM,OAC7DE,EAAcH,OAAON,SAASC,cAAc,qBAAqBM,OAE9DG,EAAI,EAAGA,EAAID,EAAaC,IAC/BpB,EAAcoB,EAAI,EAAGL,EAAkBK,EAAIF,GACxCG,MAAK,SAAAC,G,IAAGrB,EAAQqB,EAARrB,SAAUC,EAAKoB,EAALpB,MACjBqB,EAAAzB,GAAS0B,OAAOC,QACd,uBAAwCC,OAAfzB,EAAS,QAAYyB,OAANxB,EAAM,M,IAGjDyB,OAAM,SAAAL,G,IAAGrB,EAAQqB,EAARrB,SAAUC,EAAKoB,EAALpB,MAClBqB,EAAAzB,GAAS0B,OAAOI,QACd,sBAAqCF,OAAfzB,EAAS,QAAYyB,OAANxB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', promiseOut);\n\nfunction promiseOut(event) {\n  event.preventDefault();\n\n  const firstDelayInput = Number(document.querySelector('[name = \"delay\"]').value);\n  const stepInput = Number(document.querySelector('[name = \"step\"]').value);\n  const amountInput = Number(document.querySelector('[name = \"amount\"]').value);\n\n  for (let i = 0; i < amountInput; i++) {\n    createPromise(i + 1, firstDelayInput + i * stepInput)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","event","preventDefault","firstDelayInput","Number","value","stepInput","amountInput","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.800e7832.js.map"}