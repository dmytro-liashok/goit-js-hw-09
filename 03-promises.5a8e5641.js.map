{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SA8BA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAtCAQ,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAoBC,GAClBA,EAAMC,iBAEN,MAAMC,EAAkBC,OACtBN,SAASC,cAAc,oBAAoBM,OAEvCC,EAAYF,OAAON,SAASC,cAAc,mBAAmBM,OAC7DE,EAAcH,OAAON,SAASC,cAAc,qBAAqBM,OAEvE,IAAK,IAAIG,EAAI,EAAGA,EAAID,EAAaC,IAC/BpB,EAAcoB,EAAI,EAAGL,EAAkBK,EAAIF,GACxCG,MAAK,EAACpB,SAAEA,EAAQC,MAAEA,MACjBoB,EAAAxB,GAASyB,OAAOC,QACd,uBAAqBvB,QAAiBC,MAAU,IAGnDuB,OAAM,EAACxB,SAAEA,EAAQC,MAAEA,MAClBoB,EAAAxB,GAASyB,OAAOG,QACd,sBAAoBzB,QAAeC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', promiseOut);\n\nfunction promiseOut(event) {\n  event.preventDefault();\n\n  const firstDelayInput = Number(\n    document.querySelector('[name = \"delay\"]').value\n  );\n  const stepInput = Number(document.querySelector('[name = \"step\"]').value);\n  const amountInput = Number(document.querySelector('[name = \"amount\"]').value);\n\n  for (let i = 0; i < amountInput; i++) {\n    createPromise(i + 1, firstDelayInput + i * stepInput)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","event","preventDefault","firstDelayInput","Number","value","stepInput","amountInput","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.5a8e5641.js.map"}